env:
  - distro: debianjessie
    init: "/sbin/init"
    run_opts: ""
    playbook: test.yml
  - distro: ubuntutrusty
    init: "/sbin/init"
    run_opts: ""
    playbook: test.yml
  - distro: ubuntuxenial
    init: "/sbin/init"
    run_opts: ""
    playbook: test.yml

services:
  - docker

before_install:
  - docker pull jebovic/${distro}-ansible:latest

script:
  # run container
  - container_id=$(mktemp)
  - docker run --detach --privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro -p 80:80 --volume="${PWD}":/etc/ansible/roles/role_under_test:ro ${run_opts} jebovic/${distro}-ansible:latest "${init}" > "${container_id}"
  # syntax checking
  - docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/${playbook} --syntax-check
  # test role
  - docker exec "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/${playbook}
  # test role idempotence
  - idempotence=$(mktemp)
  - docker exec "$(cat ${container_id})" ansible-playbook /etc/ansible/roles/role_under_test/tests/${playbook} | tee -a ${idempotence}
  - >
    tail ${idempotence}
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)
  # test role tasks
  - docker exec "$(cat ${container_id})" env TERM=xterm service nginx status
  - docker exec "$(cat ${container_id})" env TERM=xterm service nginx stop
  - docker exec "$(cat ${container_id})" env TERM=xterm service nginx start
  - docker exec "$(cat ${container_id})" env TERM=xterm nginx -v
  - docker exec "$(cat ${container_id})" env TERM=xterm nginx -t
  - curl http://localhost

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
  slack:
    secure: LaQBkOYToZsjqkgptu3sN/dFzsmPudD4JIG+aSrloizYHHFYA8K7Z2vJwWYMekmfQbmEqpbtZ7QUzenspCaCP+0tgPNH04SQAeiPiuE2aCoqjkf+qpSk4QN150UNyzesi1PnGUfO+jHog4Ai/4dIQ+ricl4ez5oMkgBiUQoInbkvdoGXmTxkR1rVHr4Jmu+i1o+n3KAlTcyumS4UGIJKx0BwaI1SwiwzhvJ91r6PyapV7dlornFfeCQSJPT8Hqxl9SU4sx3OG8r/WKSHKFlbB7cFK0ytIYJCuQNaLswpeYa09Rd+NiuEGrgGI+2OQgks2dRrR+xrDaCYCD9+t+6kaAxRLYibB6iAIzsfeSHFBva77+uShm8auprZ3rimC8IsdzvitouRudN1EvIF24hlbH7JKWQeKREUgbMQywPvFDCTK03NtJJ/JkeFQZ4meAl3SSVnK5MbFlwSlV4Zj4Is7G5+TeOJsh77wzcWIifUbrC7ubEIkAWMPtQCFco9T+kfkR/BUey6KFA4XxBcjQ7lf+isCGAbqIHnbDVQgikomfHyK8EVYlocyyN9OuRUBe4ztiLuA8/HuRHmUd1FNXuihzQGjAkATe2QDxRtChOxXm21r/gP62tdEegaAiq0t1g27UR3Ed7IjUZ31GYXyj9KMiXc90ag5Y36IkyyjYzSsAo=
